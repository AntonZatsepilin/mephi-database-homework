services:
  app:
    container_name: mephi-db-generator-library
    restart: no
    profiles: [ generate ]
    env_file: ".env"
    depends_on:
      database:
        condition: service_healthy
    command: >
      /bin/sh -c "
      /usr/local/bin/migrate -path /app/schema -database postgres://postgres:postgres@library-db:5432/library-db?sslmode=disable up &&
      ./main
      "
    build:
      context: .
      dockerfile: Dockerfile
    
  database:
    container_name: library-db
    image: postgres:latest
    restart: no
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: postgres
      POSTGRES_DB: library-db
    ports:
      - 5432:5432
    volumes:
      - ./docker/pgdata:/var/lib/postgresql/data
    command: >
      -c max_connections=1000
      -c shared_buffers=4GB 
      -c effective_cache_size=12GB 
      -c maintenance_work_mem=1GB 
      -c checkpoint_completion_target=0.9 
      -c wal_buffers=16MB 
      -c default_statistics_target=100 
      -c random_page_cost=1.1 
      -c work_mem=4000kB 
      -c huge_pages=off 
      -c min_wal_size=1GB 
      -c max_wal_size=4GB  
      -c max_worker_processes=4 
      -c max_parallel_workers_per_gather=2 
      -c max_parallel_workers=4 
      -c max_parallel_maintenance_workers=2
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 15s
      timeout: 15s
      retries: 50

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    depends_on:
      - database
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"

volumes:
  pgadmin: